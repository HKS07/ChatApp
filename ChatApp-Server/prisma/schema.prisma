datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Profiles {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  oAuthSub       String?  @unique
  username       String?  @unique
  status         String?
  profileUrl     String?
  email          String?  @unique
  contacts       String[] @db.ObjectId
  conversationId String[] @db.ObjectId
  requests       String[] @db.ObjectId
  // favourites String[] @db.ObjectId
}

model Request {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  senderEmail   String @unique
  receiverEmail String @unique
  status        String @default("Pending")
}

model Chats {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  chats     Chat[]
  updatedAt DateTime @updatedAt
}

model Chat {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  lastMessage       String
  lastMessageSender String  @db.ObjectId
  isRead            Boolean
  Chats             Chats?  @relation(fields: [chatsId], references: [id])
  chatsId           String? @db.ObjectId
}

model Conversations {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  participants String[]
  lastMessage  String?
  updatedAt    DateTime @updatedAt
}

model Messages {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  conversationId String
  senderId       String
  content        String
  timeStamp      DateTime @updatedAt @default(now())
  readBy         String[]
}

model Online {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
}
